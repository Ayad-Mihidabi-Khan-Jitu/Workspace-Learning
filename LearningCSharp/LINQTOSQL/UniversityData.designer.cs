#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LINQTOSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="UniversityDB")]
	public partial class UniversityDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertTeacher(Teacher instance);
    partial void UpdateTeacher(Teacher instance);
    partial void DeleteTeacher(Teacher instance);
    partial void InsertDept(Dept instance);
    partial void UpdateDept(Dept instance);
    partial void DeleteDept(Dept instance);
    partial void InsertEmp(Emp instance);
    partial void UpdateEmp(Emp instance);
    partial void DeleteEmp(Emp instance);
    #endregion
		
		public UniversityDataDataContext() : 
				base(global::LINQTOSQL.Properties.Settings.Default.UniversityDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UniversityDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UniversityDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UniversityDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UniversityDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Teacher> Teachers
		{
			get
			{
				return this.GetTable<Teacher>();
			}
		}
		
		public System.Data.Linq.Table<Dept> Depts
		{
			get
			{
				return this.GetTable<Dept>();
			}
		}
		
		public System.Data.Linq.Table<Emp> Emps
		{
			get
			{
				return this.GetTable<Emp>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Student_Select")]
		public ISingleResult<Student_SelectResult> Student_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Student_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Student_SpSc")]
		public ISingleResult<Student_SpScResult> Student_SpSc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string sname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sname);
			return ((ISingleResult<Student_SpScResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Teacher_Select")]
		public ISingleResult<Teacher_SelectResult> Teacher_Select()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<Teacher_SelectResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Teacher_SpSc")]
		public ISingleResult<Teacher_SpScResult> Teacher_SpSc([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string tname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tname);
			return ((ISingleResult<Teacher_SpScResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Teacher_Insert")]
		public int Teacher_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string tname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string dname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> sl)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tname, dname, sl);
			sl = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _S_Name;
		
		private string _Reg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnS_NameChanging(string value);
    partial void OnS_NameChanged();
    partial void OnRegChanging(string value);
    partial void OnRegChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string S_Name
		{
			get
			{
				return this._S_Name;
			}
			set
			{
				if ((this._S_Name != value))
				{
					this.OnS_NameChanging(value);
					this.SendPropertyChanging();
					this._S_Name = value;
					this.SendPropertyChanged("S_Name");
					this.OnS_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Reg
		{
			get
			{
				return this._Reg;
			}
			set
			{
				if ((this._Reg != value))
				{
					this.OnRegChanging(value);
					this.SendPropertyChanging();
					this._Reg = value;
					this.SendPropertyChanged("Reg");
					this.OnRegChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teacher")]
	public partial class Teacher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SL;
		
		private string _T_Name;
		
		private string _Department;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSLChanging(int value);
    partial void OnSLChanged();
    partial void OnT_NameChanging(string value);
    partial void OnT_NameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    #endregion
		
		public Teacher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string T_Name
		{
			get
			{
				return this._T_Name;
			}
			set
			{
				if ((this._T_Name != value))
				{
					this.OnT_NameChanging(value);
					this.SendPropertyChanging();
					this._T_Name = value;
					this.SendPropertyChanged("T_Name");
					this.OnT_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dept")]
	public partial class Dept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Deptno;
		
		private string _DName;
		
		private string _Loc;
		
		private EntitySet<Emp> _Emps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeptnoChanging(int value);
    partial void OnDeptnoChanged();
    partial void OnDNameChanging(string value);
    partial void OnDNameChanged();
    partial void OnLocChanging(string value);
    partial void OnLocChanged();
    #endregion
		
		public Dept()
		{
			this._Emps = new EntitySet<Emp>(new Action<Emp>(this.attach_Emps), new Action<Emp>(this.detach_Emps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deptno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Deptno
		{
			get
			{
				return this._Deptno;
			}
			set
			{
				if ((this._Deptno != value))
				{
					this.OnDeptnoChanging(value);
					this.SendPropertyChanging();
					this._Deptno = value;
					this.SendPropertyChanged("Deptno");
					this.OnDeptnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DName", DbType="VarChar(50)")]
		public string DName
		{
			get
			{
				return this._DName;
			}
			set
			{
				if ((this._DName != value))
				{
					this.OnDNameChanging(value);
					this.SendPropertyChanging();
					this._DName = value;
					this.SendPropertyChanged("DName");
					this.OnDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loc", DbType="VarChar(50)")]
		public string Loc
		{
			get
			{
				return this._Loc;
			}
			set
			{
				if ((this._Loc != value))
				{
					this.OnLocChanging(value);
					this.SendPropertyChanging();
					this._Loc = value;
					this.SendPropertyChanged("Loc");
					this.OnLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_Emp", Storage="_Emps", ThisKey="Deptno", OtherKey="Deptno")]
		public EntitySet<Emp> Emps
		{
			get
			{
				return this._Emps;
			}
			set
			{
				this._Emps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emps(Emp entity)
		{
			this.SendPropertyChanging();
			entity.Dept = this;
		}
		
		private void detach_Emps(Emp entity)
		{
			this.SendPropertyChanging();
			entity.Dept = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emp")]
	public partial class Emp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Empno;
		
		private string _Ename;
		
		private string _Job;
		
		private System.Nullable<int> _Mgr;
		
		private System.Nullable<System.DateTime> _HireDate;
		
		private System.Nullable<decimal> _Sal;
		
		private System.Nullable<decimal> _Comm;
		
		private System.Nullable<int> _Deptno;
		
		private EntitySet<Emp> _Emps;
		
		private EntityRef<Dept> _Dept;
		
		private EntityRef<Emp> _Emp1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmpnoChanging(int value);
    partial void OnEmpnoChanged();
    partial void OnEnameChanging(string value);
    partial void OnEnameChanged();
    partial void OnJobChanging(string value);
    partial void OnJobChanged();
    partial void OnMgrChanging(System.Nullable<int> value);
    partial void OnMgrChanged();
    partial void OnHireDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHireDateChanged();
    partial void OnSalChanging(System.Nullable<decimal> value);
    partial void OnSalChanged();
    partial void OnCommChanging(System.Nullable<decimal> value);
    partial void OnCommChanged();
    partial void OnDeptnoChanging(System.Nullable<int> value);
    partial void OnDeptnoChanged();
    #endregion
		
		public Emp()
		{
			this._Emps = new EntitySet<Emp>(new Action<Emp>(this.attach_Emps), new Action<Emp>(this.detach_Emps));
			this._Dept = default(EntityRef<Dept>);
			this._Emp1 = default(EntityRef<Emp>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Empno", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Empno
		{
			get
			{
				return this._Empno;
			}
			set
			{
				if ((this._Empno != value))
				{
					this.OnEmpnoChanging(value);
					this.SendPropertyChanging();
					this._Empno = value;
					this.SendPropertyChanged("Empno");
					this.OnEmpnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ename", DbType="VarChar(100)")]
		public string Ename
		{
			get
			{
				return this._Ename;
			}
			set
			{
				if ((this._Ename != value))
				{
					this.OnEnameChanging(value);
					this.SendPropertyChanging();
					this._Ename = value;
					this.SendPropertyChanged("Ename");
					this.OnEnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job", DbType="VarChar(100)")]
		public string Job
		{
			get
			{
				return this._Job;
			}
			set
			{
				if ((this._Job != value))
				{
					this.OnJobChanging(value);
					this.SendPropertyChanging();
					this._Job = value;
					this.SendPropertyChanged("Job");
					this.OnJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mgr", DbType="Int")]
		public System.Nullable<int> Mgr
		{
			get
			{
				return this._Mgr;
			}
			set
			{
				if ((this._Mgr != value))
				{
					if (this._Emp1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMgrChanging(value);
					this.SendPropertyChanging();
					this._Mgr = value;
					this.SendPropertyChanged("Mgr");
					this.OnMgrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HireDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> HireDate
		{
			get
			{
				return this._HireDate;
			}
			set
			{
				if ((this._HireDate != value))
				{
					this.OnHireDateChanging(value);
					this.SendPropertyChanging();
					this._HireDate = value;
					this.SendPropertyChanged("HireDate");
					this.OnHireDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sal", DbType="Money")]
		public System.Nullable<decimal> Sal
		{
			get
			{
				return this._Sal;
			}
			set
			{
				if ((this._Sal != value))
				{
					this.OnSalChanging(value);
					this.SendPropertyChanging();
					this._Sal = value;
					this.SendPropertyChanged("Sal");
					this.OnSalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comm", DbType="Money")]
		public System.Nullable<decimal> Comm
		{
			get
			{
				return this._Comm;
			}
			set
			{
				if ((this._Comm != value))
				{
					this.OnCommChanging(value);
					this.SendPropertyChanging();
					this._Comm = value;
					this.SendPropertyChanged("Comm");
					this.OnCommChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deptno", DbType="Int")]
		public System.Nullable<int> Deptno
		{
			get
			{
				return this._Deptno;
			}
			set
			{
				if ((this._Deptno != value))
				{
					if (this._Dept.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeptnoChanging(value);
					this.SendPropertyChanging();
					this._Deptno = value;
					this.SendPropertyChanged("Deptno");
					this.OnDeptnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Emp_Emp", Storage="_Emps", ThisKey="Empno", OtherKey="Mgr")]
		public EntitySet<Emp> Emps
		{
			get
			{
				return this._Emps;
			}
			set
			{
				this._Emps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dept_Emp", Storage="_Dept", ThisKey="Deptno", OtherKey="Deptno", IsForeignKey=true)]
		public Dept Dept
		{
			get
			{
				return this._Dept.Entity;
			}
			set
			{
				Dept previousValue = this._Dept.Entity;
				if (((previousValue != value) 
							|| (this._Dept.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dept.Entity = null;
						previousValue.Emps.Remove(this);
					}
					this._Dept.Entity = value;
					if ((value != null))
					{
						value.Emps.Add(this);
						this._Deptno = value.Deptno;
					}
					else
					{
						this._Deptno = default(Nullable<int>);
					}
					this.SendPropertyChanged("Dept");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Emp_Emp", Storage="_Emp1", ThisKey="Mgr", OtherKey="Empno", IsForeignKey=true)]
		public Emp Emp1
		{
			get
			{
				return this._Emp1.Entity;
			}
			set
			{
				Emp previousValue = this._Emp1.Entity;
				if (((previousValue != value) 
							|| (this._Emp1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Emp1.Entity = null;
						previousValue.Emps.Remove(this);
					}
					this._Emp1.Entity = value;
					if ((value != null))
					{
						value.Emps.Add(this);
						this._Mgr = value.Empno;
					}
					else
					{
						this._Mgr = default(Nullable<int>);
					}
					this.SendPropertyChanged("Emp1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emps(Emp entity)
		{
			this.SendPropertyChanging();
			entity.Emp1 = this;
		}
		
		private void detach_Emps(Emp entity)
		{
			this.SendPropertyChanging();
			entity.Emp1 = null;
		}
	}
	
	public partial class Student_SelectResult
	{
		
		private int _Id;
		
		private string _S_Name;
		
		private string _Reg;
		
		public Student_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string S_Name
		{
			get
			{
				return this._S_Name;
			}
			set
			{
				if ((this._S_Name != value))
				{
					this._S_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Reg
		{
			get
			{
				return this._Reg;
			}
			set
			{
				if ((this._Reg != value))
				{
					this._Reg = value;
				}
			}
		}
	}
	
	public partial class Student_SpScResult
	{
		
		private int _Id;
		
		private string _S_Name;
		
		private string _Reg;
		
		public Student_SpScResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string S_Name
		{
			get
			{
				return this._S_Name;
			}
			set
			{
				if ((this._S_Name != value))
				{
					this._S_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Reg
		{
			get
			{
				return this._Reg;
			}
			set
			{
				if ((this._Reg != value))
				{
					this._Reg = value;
				}
			}
		}
	}
	
	public partial class Teacher_SelectResult
	{
		
		private int _SL;
		
		private string _T_Name;
		
		private string _Department;
		
		public Teacher_SelectResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int NOT NULL")]
		public int SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this._SL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string T_Name
		{
			get
			{
				return this._T_Name;
			}
			set
			{
				if ((this._T_Name != value))
				{
					this._T_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
	}
	
	public partial class Teacher_SpScResult
	{
		
		private int _SL;
		
		private string _T_Name;
		
		private string _Department;
		
		public Teacher_SpScResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int NOT NULL")]
		public int SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this._SL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string T_Name
		{
			get
			{
				return this._T_Name;
			}
			set
			{
				if ((this._T_Name != value))
				{
					this._T_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
